- процедури от по-висок ред: процедури, които приемат или връщат други процедури

- ламбда изрази
  - анонимни процедури
  - трябва да се извика при самото дефиниране
  - дефинирайте ламбда израз, който прибавя 5 към подадено число
(define (add-five x) ((λ (x) (+ x 5)) x))
(= (add-five 123) 128)
  - дефинирайте ламбда предикат, който проверява дали число е по-голямо от 10
;((λ (x) (> x 10)) 5)             ; -> #f
  - дефинирайте ламбда израз, който събира две числа
    - Колко аргумента приема следната процедура?
(define (add x y) (lambda (a b) (+ a b)))
    - Разпишете работата на следната процедура:
((λ (x y z) (x y z)) (λ (x y) (+ x y)) 5 6)

- Какво означава унарна процедура?

- Какво е композиция на две процедури "f" и "g" върху данна "x"?
  - Прилагане на "f" върху резултата от прилагането на "g" върху "x".
  - Как ще звучи изречението, ако добавим още една процедура "v"?

- Какво е частично прилагане (partial application)? Прилагане на функция към част от аргументите и.

Пример:

(define (my-curry f x)
  (λ (y) (f x y)))

(my-curry expt 2) ; this compiles! The result is the expt procedure applied partially to 2.
(= ((λ (x) ((my-curry expt 2) x)) 4) 16)
(= ((λ (x) ((my-curry expt 2) x)) 8) 256)

- Как да конкатенираме string-ове?
  Функцията string-append приема произволен брой агрументи и връща низ, който
представлява тяхната конкатенация.
  (string-append "I" "Love" "Racket") ; "ILoveRacket"